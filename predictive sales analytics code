"use client"

import { useState } from 'react'
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { Label } from "@/components/ui/label"

// Mock historical data
const historicalData = [
  { month: 'Jan', sales: 4000 },
  { month: 'Feb', sales: 3000 },
  { month: 'Mar', sales: 5000 },
  { month: 'Apr', sales: 4500 },
  { month: 'May', sales: 6000 },
  { month: 'Jun', sales: 5500 },
]

// Mock prediction function (in a real scenario, this would be a more complex model)
const predictSales = (lastSale: number) => {
  return Math.round(lastSale * (1 + (Math.random() * 0.2 - 0.1))) // Random growth between -10% and 10%
}

export default function Component() {
  const [data, setData] = useState(historicalData)
  const [newSale, setNewSale] = useState('')

  const handlePredict = () => {
    const lastSale = data[data.length - 1].sales
    const predictedSale = predictSales(lastSale)
    const newMonth = `Month ${data.length + 1}`
    setData([...data, { month: newMonth, sales: predictedSale }])
  }

  const handleAddData = () => {
    if (newSale && !isNaN(Number(newSale))) {
      const newMonth = `Month ${data.length + 1}`
      setData([...data, { month: newMonth, sales: Number(newSale) }])
      setNewSale('')
    }
  }

  return (
    <Card className="w-full max-w-4xl mx-auto">
      <CardHeader>
        <CardTitle>Predictive Sales Analytics</CardTitle>
        <CardDescription>Historical sales data and future predictions</CardDescription>
      </CardHeader>
      <CardContent>
        <div className="h-[300px] w-full">
          <ResponsiveContainer width="100%" height="100%">
            <LineChart data={data}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="month" />
              <YAxis />
              <Tooltip />
              <Legend />
              <Line type="monotone" dataKey="sales" stroke="#8884d8" activeDot={{ r: 8 }} />
            </LineChart>
          </ResponsiveContainer>
        </div>
        
        <div className="mt-6">
          <h3 className="text-lg font-semibold">Prediction Summary</h3>
          <p>Based on the historical data, the predicted sales for the next month is: 
            <span className="font-bold"> ${data[data.length - 1].sales}</span>
          </p>
        </div>
        
        <div className="mt-6 flex items-end gap-4">
          <div className="grid w-full max-w-sm items-center gap-1.5">
            <Label htmlFor="newSale">Add New Sales Data</Label>
            <Input
              type="number"
              id="newSale"
              placeholder="Enter sales amount"
              value={newSale}
              onChange={(e) => setNewSale(e.target.value)}
            />
          </div>
          <Button onClick={handleAddData}>Add Data</Button>
          <Button onClick={handlePredict}>Predict Next Month</Button>
        </div>
      </CardContent>
    </Card>
  )
}
